{"ast":null,"code":"import { Observable } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = \"assets/data/\";\n    }\n\n    getExperiences() {\n      return this.http.get(this.baseUrl + \"experiences.json\").pipe(catchError(this.handleError));\n    }\n\n    getAbout() {\n      return this.http.get(this.baseUrl + \"about.json\").pipe(catchError(this.handleError));\n    }\n\n    getPosts() {\n      return this.http.get(this.baseUrl + \"posts.json\").pipe(catchError(this.handleError));\n    }\n\n    handleError(error) {\n      console.error(\"server error:\", error);\n\n      if (error.error instanceof Error) {\n        const errMessage = error.error.message;\n        return Observable.throw(errMessage); // Use the following instead if using lite-server\n        // return Observable.throw(err.text() || \"backend server error\");\n      }\n\n      return Observable.throw(error || \"Node.js server error\");\n    }\n\n  }\n\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module"}