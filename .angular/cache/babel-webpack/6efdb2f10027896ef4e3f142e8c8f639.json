{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from 'tslib';\nimport { ɵɵdefineInjectable, Injectable } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nlet NgNavigatorShareService = /*#__PURE__*/(() => {\n  let NgNavigatorShareService = class NgNavigatorShareService {\n    constructor() {\n      this.webNavigator = null;\n      this.webNavigator = window.navigator;\n    }\n\n    canShare() {\n      return this.webNavigator !== null && this.webNavigator.share !== undefined;\n    }\n\n    canShareFile(file) {\n      return this.webNavigator !== null && this.webNavigator.share !== undefined && this.webNavigator.canShare({\n        files: file\n      });\n    }\n\n    share({\n      title,\n      text,\n      url,\n      files\n    }) {\n      return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n        if (this.webNavigator !== null && this.webNavigator.share !== undefined) {\n          if ((text === undefined || text === null) && (url === undefined || url === null)) {\n            console.warn(`text and url both can't be empty, at least provide either text or url`);\n          } else {\n            try {\n              const shareObject = {\n                title,\n                text,\n                url\n              };\n\n              if (files && files.length !== 0) {\n                shareObject.files = files;\n              }\n\n              const isShared = yield this.webNavigator.share(shareObject);\n              resolve({\n                shared: true\n              });\n            } catch (error) {\n              reject({\n                shared: false,\n                error\n              });\n            }\n          }\n        } else {\n          reject({\n            shared: false,\n            error: `This service/api is not supported in your Browser`\n          });\n        }\n      }));\n    }\n\n  };\n\n  NgNavigatorShareService.ɵfac = function NgNavigatorShareService_Factory(t) {\n    return new (t || NgNavigatorShareService)();\n  };\n\n  NgNavigatorShareService.ɵprov = ɵɵdefineInjectable({\n    factory: function NgNavigatorShareService_Factory() {\n      return new NgNavigatorShareService();\n    },\n    token: NgNavigatorShareService,\n    providedIn: \"root\"\n  });\n  NgNavigatorShareService = __decorate([__metadata(\"design:paramtypes\", [])], NgNavigatorShareService);\n  return NgNavigatorShareService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\r\n * Public API Surface of ng-navigator-share\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NgNavigatorShareService }; //# sourceMappingURL=ng-navigator-share.js.map","map":null,"metadata":{},"sourceType":"module"}