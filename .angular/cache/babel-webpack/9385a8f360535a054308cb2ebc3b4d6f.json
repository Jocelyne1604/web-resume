{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport let InViewportDirective = /*#__PURE__*/(() => {\n  class InViewportDirective {\n    constructor(_el) {\n      this._el = _el;\n      this.inViewport = new EventEmitter();\n    }\n\n    ngOnChanges() {\n      this.check();\n    }\n\n    ngOnInit() {}\n\n    check(partial = true) {\n      const el = this._el.nativeElement;\n      const elSize = el.offsetWidth * el.offsetHeight;\n      const rec = el.getBoundingClientRect();\n      const vp = {\n        width: window.innerWidth,\n        height: window.innerHeight\n      };\n      const sectionMarging = 370;\n      const tViz = rec.top >= 0 && rec.top < vp.height - sectionMarging;\n      const bViz = rec.bottom > 0 && rec.bottom <= vp.height - sectionMarging;\n      const vVisible = partial ? tViz || bViz : tViz && bViz;\n      let event = {\n        target: el,\n        value: false\n      };\n      event[\"value\"] = elSize && vVisible;\n\n      if (event[\"value\"]) {\n        this.inViewport.emit(event);\n      }\n    }\n\n  }\n\n  InViewportDirective.ɵfac = function InViewportDirective_Factory(t) {\n    return new (t || InViewportDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  InViewportDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: InViewportDirective,\n    selectors: [[\"\", \"in-viewport\", \"\"]],\n    inputs: {\n      pageYOffset: \"pageYOffset\"\n    },\n    outputs: {\n      inViewport: \"inViewport\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return InViewportDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}