{"ast":null,"code":"import { LOCALE_ID } from \"@angular/core\";\nimport { EllipsisPipe } from \"../pipe/ellipsis.pipe\";\nimport * as i0 from \"@angular/core\";\nexport let InternationalizationDirective = /*#__PURE__*/(() => {\n  class InternationalizationDirective {\n    constructor(el, locale) {\n      this.el = el;\n      this.locale = locale;\n      this._data = [];\n    }\n\n    get data() {\n      return this._data;\n    }\n\n    set data(value) {\n      if (value) {\n        this._data = value;\n        this.el.nativeElement.innerHTML = this.retrievePropertyValueByLocation();\n      }\n    }\n\n    ngOnInit() {}\n\n    retrievePropertyValueByLocation() {\n      if (this._data) {\n        const value = this._data.filter(element => element.language === (this.locale || \"en\")).map(element => element[this.property]) || [\"\"];\n        return this.ellipsis > 0 ? new EllipsisPipe().transform(value[0], this.ellipsis) : value;\n      }\n    }\n\n  }\n\n  InternationalizationDirective.ɵfac = function InternationalizationDirective_Factory(t) {\n    return new (t || InternationalizationDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(LOCALE_ID));\n  };\n\n  InternationalizationDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: InternationalizationDirective,\n    selectors: [[\"\", \"internationalization\", \"\"]],\n    inputs: {\n      property: \"property\",\n      data: \"data\",\n      ellipsis: \"ellipsis\"\n    }\n  });\n  return InternationalizationDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}