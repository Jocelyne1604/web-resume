{"ast":null,"code":"import { RouterModule } from \"@angular/router\";\nimport { ResumeComponent } from \"./resume/resume.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\"; // Any URL apart from the root domain is going to be rendered as \"page-not-found\".\n\nconst routes = [{\n  path: \"\",\n  component: ResumeComponent\n}, {\n  path: \"about\",\n  redirectTo: \"/#about\"\n}, {\n  path: \"experience\",\n  redirectTo: \"/#experience\"\n}, {\n  path: \"experiences\",\n  redirectTo: \"/#experience\"\n}, {\n  path: \"posts\",\n  redirectTo: \"/#posts\"\n}, {\n  path: \"contact\",\n  redirectTo: \"/#contact\"\n}, {\n  path: \"**\",\n  redirectTo: \"/page-not-found\"\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forRoot(routes, {\n      // In order to get anchor / fragment scrolling to work at all, we need to\n      // enable it on the router.\n      anchorScrolling: \"enabled\",\n      // Once the above is enabled, the fragment link will only work on the\n      // first click. This is because, by default, the Router ignores requests\n      // to navigate to the SAME URL that is currently rendered. Unfortunately,\n      // the fragment scrolling is powered by Navigation Events. As such, we\n      // have to tell the Router to re-trigger the Navigation Events even if we\n      // are navigating to the same URL.\n      onSameUrlNavigation: \"reload\"\n    })], RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}